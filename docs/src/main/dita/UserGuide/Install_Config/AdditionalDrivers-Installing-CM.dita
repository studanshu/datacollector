<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA General Task//EN" "generalTask.dtd">
<task id="task_yhv_1pn_25">
    <title>Installing Additional Drivers with Cloudera Manager (Optional)</title>
    <taskbody>
        <context><indexterm>additional drivers<indexterm>installing through Cloudera
                    Manager</indexterm></indexterm><indexterm>Cloudera Manager<indexterm>installing
                    additional drivers</indexterm></indexterm>You can install additional drivers for
            stages. <p>Before you use the JMS Consumer and JDBC Consumer origins or the JDBC
                Producer destination, you need to install drivers for the implementation that you
                want to use. For example, to use the JDBC Consumer or JDBC Producer with Oracle,
                install the Oracle JDBC drivers.</p><p>Additional drivers for other stages are
                optional. For example, you can install custom classes for the JavaScript or Jython
                Evaluators. </p><p>To install additional drivers for a <ph
                    conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                /> administered by Cloudera Manager, perform the following steps:</p><ol
                id="ol_f3s_hrw_ft">
                <li>In Cloudera Manager, select the <uicontrol>StreamSets</uicontrol> service and
                    then click <uicontrol>Configuration</uicontrol>. </li>
                <li>On the <wintitle>Configuration</wintitle> page, in the <uicontrol>Data Collector
                        Advanced Configuration Snippet (Safety Valve) for sdc-env.sh</uicontrol>
                    field, add the STREAMSETS_LIBRARIES_EXTRA_DIR environment variable and point it
                    to the driver directory, as
                        follows:<codeblock>export STREAMSETS_LIBRARIES_EXTRA_DIR=&lt;driver directory></codeblock><p>For
                        example:
                    </p><codeblock>export STREAMSETS_LIBRARIES_EXTRA_DIR=/opt/sdc-extras/</codeblock>By
                    default, the path is <codeph>/var/lib/sdc</codeph>. </li>
                <li>On every node that runs <ph
                        conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                    />, copy the drivers to the directory defined for the
                    STREAMSETS_LIBRARIES_EXTRA_DIR environment variable. <p>Use a directory
                        structure for each set of drivers based on the stage library name and
                        directory structure as follows:
                        </p><codeblock>$STREAMSETS_LIBRARIES_EXTRA_DIR/&lt;stage library directory>/lib</codeblock><p>For
                        example to install drivers for JMS to the opt/sdc-extras directory, you
                        would copy them to the following directory:
                        <codeblock>/opt/sdc-extras/streamsets-datacollector-jms-lib/lib/</codeblock></p></li>
                <li>When using the Java Security Manager, which is enabled by default, update the
                        <uicontrol>Data Collector Advanced Configuration Snippet (Safety Valve) for
                        sdc-security.policy</uicontrol> property to include the driver directory as follows:<p>
                        <codeblock>// user-defined additional driver directory
grant codebase "file://&lt;driver directory>-" {
  permission java.security.AllPermission;
};</codeblock>
                    </p><p>For example:
                        <codeblock>// user-defined additional driver directory
grant codebase "file:///opt/sdc-extras/-" {
  permission java.security.AllPermission;
};</codeblock></p></li>
                <li>Restart <ph
                        conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                    />.</li>
            </ol></context>
    </taskbody>
</task>
