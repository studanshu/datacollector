<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_uj4_mxy_bs">
  <title>SQL Query</title>
  <conbody>
    <p><indexterm>JDBC Consumer origin<indexterm>SQL query</indexterm></indexterm><indexterm>SQL
          query<indexterm>JDBC Consumer</indexterm></indexterm>The SQL query defines the data
      returned from the database. When you define the SQL query, use the following guidelines:<dl>
        <dlentry>
          <dt>Use a WHERE and an ORDER BY clause in the query</dt>
          <dd>JDBC Consumer requires both clauses in the SQL query.</dd>
        </dlentry>
        <dlentry>
          <dt>In the WHERE clause, include the offset column and the offset value</dt>
          <dd>The origin uses an offset column and value to determine the data that is returned.
            Include both in the WHERE clause of the query. </dd>
        </dlentry>
        <dlentry>
          <dt>Use the OFFSET constant to represent the offset value</dt>
          <dd>In the WHERE clause, use ${OFFSET} to represent the offset value. </dd>
          <dd>For example, when you start a pipeline, the following query returns all data from the
            table where the data in the offset column is greater than the initial offset
              value:<codeblock>SELECT * FROM &lt;tablename> WHERE &lt;offset column> > ${OFFSET}</codeblock><note
              type="tip">When the offset values are strings, enclose ${OFFSET} in single quotation
              marks.</note></dd>
        </dlentry>
        <dlentry>
          <dt>In the ORDER BY clause, include the offset column as the first column</dt>
          <dd>To avoid returning duplicate data, use the offset column as the first column in the
            ORDER BY clause.</dd>
          <dd>
            <note>Using column that is not a primary key or indexed column in the ORDER BY clause
              can slow performance.</note>
          </dd>
        </dlentry>
      </dl></p>
    <p>For example, the following query returns data from an Invoice table where the ID column is
      the offset column. The query returns all data where the ID is greater than the offset and
      orders the data by the
      ID:<codeblock> SELECT * FROM invoice WHERE id > ${OFFSET} ORDER BY id</codeblock></p>
  </conbody>
</concept>
