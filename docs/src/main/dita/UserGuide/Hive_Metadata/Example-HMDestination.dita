<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_vh3_s4n_fw">
 <title>The Hive Metastore Destination</title>
 <shortdesc>Now to process the metadata records - and to create and update tables in Hive - you need
        the Hive Metastore destination.</shortdesc>
 <conbody>
  <p>Connect the destination to the second output stream of the processor and configure the
            destination. The Hive Metastore just needs to know how to connect to Hive, so
            configuration of this destination is a breeze - all the work happens under the covers. </p>
        <p>The destination connects to Hive the same way the processor does so your destination
            should look something like this, using the same Hive connection information:</p>
        <p><image href="../Graphics/HiveMeta-Ex-Dest.png" id="image_imx_5pn_fw" scale="70"/></p>
        <p>The magic here is: if the destination gets a metadata record that says you need a new
            table for a new web service, it creates the table with all the necessary columns so you
            can write the record (that triggered that metadata record) to the table.</p>
        <p>And if the structure of the record going to a table changes, like adding a couple new
            fields, the destination updates the table in Hive so the record can be written to the
            table.</p>
        <p>That covers the metadata, but what about the data?  </p>
 </conbody>
</concept>
