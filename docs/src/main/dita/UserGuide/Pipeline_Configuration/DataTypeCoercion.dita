<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_fmr_ggh_fr">
 <title>Data Type Coercion</title>
 <shortdesc>When an expression requires, the expression language attempts implicit data type
  conversion - a.k.a. data type coercion. When coercion is not possible, <ph
   conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/> passes the
  error records to the stage for error handling.</shortdesc>
 <conbody>
  <p>For example, you have an Expression Evaluator stage configured to send error records to the
   pipeline for error handling, and the pipeline writes error records to a file.  The Expression
   Evaluator includes an expression that treats string data as integers. When the field includes
   integer or valid numeric data, the expression language coerces the data type. If the field
   includes a date, that record is written to the error records file.</p>
  <p>To avoid coercion errors, you can use the Field Converter earlier in the pipeline to convert
   data to the appropriate data type.</p>
 </conbody>
</concept>
