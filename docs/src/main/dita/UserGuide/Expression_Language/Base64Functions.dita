<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ylk_v44_jw">
 <title>Base64 Functions</title>
 <shortdesc>Use Base64 functions to encode or decode data using Base64.</shortdesc>
 <conbody>
  <p><indexterm>functions<indexterm>Base64 functions</indexterm></indexterm><indexterm>Base64
                    functions<indexterm>description</indexterm></indexterm>The expression language
            provides the following Base64 functions:</p>
        <dl>
            <dlentry>
                <dt>base64:decodeBytes("&lt;string>")</dt>
                <dd>Returns a decoded byte array from a Base64 encoded string.</dd>
                <dd>Return type: Byte Array.</dd>
                <dd>Uses the following argument:<ul id="ul_jvq_sx4_jw">
                        <li>string - The Base64 encoded string to decode.</li>
                    </ul></dd>
                <dd>For example, ${base64:decodeBytes(record:value("/ID"))} decodes the Base64
                    encoded string in the ID field as a byte array value.</dd>
            </dlentry>
            <dlentry>
                <dt>base64:decodeString("&lt;string>", "&lt;charset>")</dt>
                <dd>Returns a decoded string from a Base64 encoded string using the specified
                    character set.</dd>
                <dd>Return type: String.</dd>
                <dd>Uses the following arguments:<ul id="ul_ogd_ty4_jw">
                        <li>string - The Base64 encoded string to decode.</li>
                        <li>charset - The character set to use to decode the data.</li>
                    </ul></dd>
                <dd>For example, ${base64:decodeString(record:value("/ID"), "UTF-8")} decodes the
                    Base64 encoded string in the ID field using the UTF-8 character set as a string
                    value.</dd>
            </dlentry>
            <dlentry>
                <dt>base64:encodeBytes(&lt;byte array>, &lt;urlSafe: true | false>)</dt>
                <dd>Returns a Base64 encoded string value of the specified byte array.</dd>
                <dd>Return type: String.</dd>
                <dd>Uses the following arguments:<ul id="ul_hsr_kz4_jw">
                        <li>byte array - The byte array to encode using Base64.</li>
                        <li>urlSafe - When set to true, encodes the data so that it can be safely
                            sent in a URL. </li>
                    </ul></dd>
                <dd>For example, ${base64:encodeBytes(record:value("/ID"), true)} uses Base64 to
                    encode the byte array in the ID field such that the encoded data is URL
                    safe.</dd>
            </dlentry>
            <dlentry>
                <dt>base64:encodeString("&lt;string>", &lt;urlSafe: true | false>,
                    "&lt;charset>")</dt>
                <dd>
                    <p>Returns a Base64 encoded string value of the specified string. </p>
                </dd>
                <dd>Return type: String.</dd>
                <dd>Uses the following arguments:<ul id="ul_okr_dbp_jw">
                        <li>string - The string to encode using Base64.</li>
                        <li>urlSafe - When set to true, encodes the data so that it can be safely
                            sent in a URL. </li>
                        <li>charset - The character set to use to encode the data.</li>
                    </ul></dd>
                <dd>For example, ${base64:encodeString(record:value("/ID"), false, "UTF-8")} uses
                    Base64 to encode the string in the ID field using the UTF-8 character set such
                    that the encoded data is not URL safe.</dd>
            </dlentry>
        </dl>
 </conbody>
</concept>
